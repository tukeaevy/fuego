{
  "dmwda_test_configuration": {
    "algorithm_name": "Dynamic Multi-Window Difficulty Algorithm (DMWDA)",
    "version": "1.0",
    "target_block_time": 480,
    "windows": {
      "short_window": 15,
      "medium_window": 45,
      "long_window": 120,
      "emergency_window": 5
    },
    "adjustment_limits": {
      "min_adjustment": 0.5,
      "max_adjustment": 4.0,
      "emergency_threshold": 0.1
    },
    "test_scenarios": {
      "normal_operation": {
        "description": "Steady hash rate operation",
        "block_count": 200,
        "block_time_range": [432, 528],
        "expected_behavior": "Stable difficulty adjustment"
      },
      "hash_rate_spike": {
        "description": "10x hash rate increase",
        "phases": [
          {"name": "normal", "blocks": 50, "block_time_range": [432, 528]},
          {"name": "spike", "blocks": 50, "block_time_range": [43, 53]},
          {"name": "recovery", "blocks": 100, "block_time_range": [432, 528]}
        ],
        "expected_behavior": "Emergency response, rapid difficulty increase"
      },
      "hash_rate_drop": {
        "description": "10x hash rate decrease",
        "phases": [
          {"name": "normal", "blocks": 50, "block_time_range": [432, 528]},
          {"name": "drop", "blocks": 50, "block_time_range": [4320, 5280]},
          {"name": "recovery", "blocks": 100, "block_time_range": [432, 528]}
        ],
        "expected_behavior": "Emergency response, rapid difficulty decrease"
      },
      "block_stealing": {
        "description": "Block stealing attempt",
        "phases": [
          {"name": "normal", "blocks": 50, "block_time_range": [432, 528]},
          {"name": "stealing", "blocks": 5, "block_time_range": [20, 30]},
          {"name": "recovery", "blocks": 100, "block_time_range": [432, 528]}
        ],
        "expected_behavior": "Block stealing detection, emergency response"
      },
      "oscillating": {
        "description": "Oscillating hash rate",
        "block_count": 200,
        "pattern": "alternating",
        "fast_time": 240,
        "slow_time": 720,
        "expected_behavior": "Smoothing, reduced oscillations"
      },
      "gradual_change": {
        "description": "Gradual hash rate change",
        "phases": [
          {"name": "increase", "blocks": 100, "block_time_range": [480, 160]},
          {"name": "decrease", "blocks": 100, "block_time_range": [160, 480]}
        ],
        "expected_behavior": "Smooth adaptation, no emergency mode"
      },
      "stress_test": {
        "description": "Stress test with random timing",
        "block_count": 1000,
        "block_time_range": [48, 4800],
        "expected_behavior": "Algorithm stability under extreme conditions"
      }
    },
    "performance_metrics": {
      "stability_score": {
        "description": "Algorithm stability (0-10)",
        "calculation": "10 - (block_time_cv + difficulty_cv) * 5",
        "target": "> 7.0"
      },
      "response_time": {
        "description": "Time to respond to changes (blocks)",
        "calculation": "Average blocks to detect and respond to significant changes",
        "target": "< 10 blocks"
      },
      "emergency_activation": {
        "description": "Emergency mode activations",
        "calculation": "Count of blocks triggering emergency response",
        "target": "Appropriate for scenario"
      },
      "block_stealing_detection": {
        "description": "Block stealing attempt detection",
        "calculation": "Count of detected block stealing patterns",
        "target": "100% detection rate"
      }
    },
    "validation_criteria": {
      "stability": {
        "normal_operation": "Stability score > 8.0",
        "hash_rate_changes": "Stability score > 6.0",
        "stress_test": "Stability score > 5.0"
      },
      "response": {
        "emergency_scenarios": "Response time < 5 blocks",
        "gradual_changes": "Response time < 15 blocks",
        "oscillating": "Response time < 10 blocks"
      },
      "safety": {
        "minimum_difficulty": "Never below 10,000",
        "maximum_difficulty": "Reasonable upper bound",
        "emergency_bounds": "0.1x to 10x adjustment range"
      }
    },
    "test_environment": {
      "platforms": ["Linux", "macOS", "Windows"],
      "compilers": ["GCC", "Clang", "MSVC"],
      "build_types": ["Debug", "Release"],
      "memory_limit": "2GB",
      "time_limit": "300 seconds"
    }
  }
}
