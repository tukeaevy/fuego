name: macOS

on:
  push:
    tags:
      - "*"

jobs:
  build-macos:
    name: macOS
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-13
            arch: intel
            arch_flag: x86_64
          - os: macos-14
            arch: apple
            arch_flag: arm64
    steps:
      - uses: actions/checkout@v4

      - name: Build
        id: build
        run: |
          set -e
          build_folder="build/"
          xfg_ver=$(echo ${{ github.ref }} | sed 's|refs/tags/||')
          release_name="fuego-cli-macOS-${{ matrix.arch }}-v$xfg_ver"
          
          # Install dependencies
          brew install gcc boost cmake
          # Ensure Boost development libraries are properly linked
          brew link --force boost
          
          # Create build directory
          mkdir "$build_folder"
          cd "$build_folder"
          
          # Configure CMake with proper architecture settings
          if [ "${{ matrix.arch }}" = "apple" ]; then
            # Apple Silicon ARM64 specific configuration
            cmake -DCMAKE_C_FLAGS="-mmacosx-version-min=11.0" \
                  -DCMAKE_CXX_FLAGS="-mmacosx-version-min=11.0" \
                  -DCMAKE_OSX_ARCHITECTURES=${{ matrix.arch_flag }} \
                  -DCMAKE_SYSTEM_PROCESSOR=arm64 \
                  -DARCH=arm64 \
                  -DCMAKE_PREFIX_PATH="/opt/homebrew" \
                  -DBoost_NO_BOOST_CMAKE=ON \
                  ..
          else
            # Intel x86_64 configuration
            cmake -DCMAKE_C_FLAGS="-mmacosx-version-min=10.12" \
                  -DCMAKE_CXX_FLAGS="-mmacosx-version-min=10.12" \
                  -DCMAKE_OSX_ARCHITECTURES=${{ matrix.arch_flag }} \
                  -DCMAKE_SYSTEM_PROCESSOR=x86_64 \
                  -DARCH=x86_64 \
                  -DCMAKE_PREFIX_PATH="/opt/homebrew" \
                  -DBoost_NO_BOOST_CMAKE=ON \
                  ..
          fi
          
          # Build with all available cores
          make -j$(sysctl -n hw.ncpu)
          
          # Create release package
          mkdir "$release_name"
          exeFiles=()
          for f in src/*; do [[ -x $f && -f $f ]] && strip "$f" && exeFiles+=( "$f" ); done
          cp "${exeFiles[@]}" "$release_name/"
          zip -r "$release_name".zip "$release_name"
          sha256=$(shasum -a 256 "$release_name".zip | awk '{print toupper($1)}')
          asset_path="./$build_folder$release_name.zip"
          echo "sha256=${sha256}" >> $GITHUB_OUTPUT
          echo "release_name=${release_name}.zip" >> $GITHUB_OUTPUT
          echo "asset_path=${asset_path}" >> $GITHUB_OUTPUT
          echo "xfg_version=${xfg_ver}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.build.outputs.asset_path }}
          name: Fuego CLI Suite v${{ steps.build.outputs.xfg_ver }}
          body: |
            **${{ steps.build.outputs.release_name }}**
            ${{ steps.build.outputs.sha256 }}
          append_body: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
