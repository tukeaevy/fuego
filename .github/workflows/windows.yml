name: Windows

on:
  push:
    tags:
      - "*"

jobs:
  build-windows:
    name: Windows
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.3
        
      - name: Install Boost using vcpkg
        run: |
          # Install vcpkg
          git clone https://github.com/Microsoft/vcpkg.git C:\vcpkg
          cd C:\vcpkg
          .\bootstrap-vcpkg.bat
          
          # Install Boost libraries
          .\vcpkg install boost-system:x64-windows
          .\vcpkg install boost-filesystem:x64-windows
          .\vcpkg install boost-thread:x64-windows
          .\vcpkg install boost-date-time:x64-windows
          .\vcpkg install boost-chrono:x64-windows
          .\vcpkg install boost-regex:x64-windows
          .\vcpkg install boost-serialization:x64-windows
          .\vcpkg install boost-program-options:x64-windows
          
          # Set environment variables
          echo "VCPKG_ROOT=C:\vcpkg" >> $env:GITHUB_ENV
          echo "CMAKE_TOOLCHAIN_FILE=C:\vcpkg\scripts\buildsystems\vcpkg.cmake" >> $env:GITHUB_ENV

      - name: Build
        shell: powershell
        id: build
        run: |
          $ErrorActionPreference = "Stop"
          $build_folder = "build"
          $xfg_ver = "${{ github.ref }}" -replace 'refs/tags/'
          $release_name = "fuego-cli-win64-v$xfg_ver"
          mkdir "$build_folder" -Force
          cd "$build_folder"
          cmake -G "Visual Studio 17 2022" -A x64 -DCMAKE_TOOLCHAIN_FILE="$env:CMAKE_TOOLCHAIN_FILE" ..
          if ($LASTEXITCODE -ne 0) { throw "CMake configuration failed" }
          msbuild fuegoX.sln /p:Configuration=Release /m /v:minimal
          if ($LASTEXITCODE -ne 0) { throw "Build failed" }
          cd src\Release
          Compress-Archive -Path *.exe -DestinationPath "$release_name.zip"
          $sha256 = (Get-FileHash "$release_name.zip").Hash
          $asset_path = "./$build_folder/src/Release/$release_name.zip"
          mkdir "$release_name" -Force
          cp *.exe "$release_name/"
          echo "sha256=${sha256}" >> $env:GITHUB_OUTPUT
          echo "release_name=${release_name}.zip" >> $env:GITHUB_OUTPUT
          echo "asset_path=${asset_path}" >> $env:GITHUB_OUTPUT
          echo "xfg_version=${xfg_ver}" >> $env:GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.build.outputs.asset_path }}
          name: Fuego CLI Suite v${{ steps.build.outputs.xfg_ver }}
          body: |
            **${{ steps.build.outputs.release_name }}**
            ${{ steps.build.outputs.sha256 }}
          append_body: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
