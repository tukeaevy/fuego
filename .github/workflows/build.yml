# CI workflow that builds Fuego on three major OSes

name: CI

on:
  push:
    branches: [ master, dynamigo-release-v10 ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-22.04, macos-14, windows-2022]

    env:
      CMAKE_BUILD_TYPE: Release

    steps:
      - uses: actions/checkout@v4

      # -------------------- Cache --------------------
      - name: Cache packages
        if: matrix.os == 'ubuntu-22.04'
        uses: actions/cache@v4
        with:
          path: /var/cache/apt
          key: ${{ runner.os }}-apt-${{ hashFiles('**/CMakeLists.txt') }}
      - name: Cache Homebrew (macOS)
        if: matrix.os == 'macos-14'
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Caches/Homebrew
            /usr/local/Homebrew/Library/Homebrew/vendor/bundle
          key: ${{ runner.os }}-homebrew-${{ hashFiles('**/CMakeLists.txt') }}
      - name: Cache vcpkg & Chocolatey (Windows)
        if: matrix.os == 'windows-2022'
        uses: actions/cache@v4
        with:
          path: |
            C:\vcpkg\installed
            C:\ProgramData\chocolatey\lib
          key: ${{ runner.os }}-windows-${{ hashFiles('**/CMakeLists.txt') }}

      # -------------------- Dependencies --------------------
      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential ninja-build pkg-config \
               libssl-dev libminiupnpc-dev libqrencode-dev libudev-dev \
               libunwind-dev liblzma-dev qtbase5-dev qtbase5-dev-tools \
               libboost-all-dev

      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-14'
        run: |
          brew install ninja boost qt@5 miniupnpc qrencode
          echo "BOOST_ROOT=$(brew --prefix boost)" >> $GITHUB_ENV

      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-2022'
        shell: pwsh
        run: |
          choco install -y ninja
          choco install -y vcpkg
          choco install -y miniupnpc
          choco install -y qrencode
          choco install -y qt5-default
          vcpkg install boost-filesystem
          vcpkg install boost-thread
          vcpkg install boost-date-time
          vcpkg install boost-chrono
          vcpkg install boost-regex
          vcpkg install boost-serialization
          vcpkg install boost-program-options
          vcpkg install boost-multi-index
          vcpkg install boost-uuid
          vcpkg install boost-asio
          vcpkg install boost-scope-exit
          vcpkg install boost-format
          vcpkg install --triplet x64-windows

      # -------------------- Configure & Build --------------------
      - name: Configure
        shell: bash
        run: |
          if [ "${{ matrix.os }}" == "macos-14" ]; then
            cmake -S . -B build \
                  -G Ninja \
                  -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE \
                  -DCMAKE_OSX_ARCHITECTURES=arm64 \
                  -DBOOST_ROOT="$BOOST_ROOT" \
                  -DBoost_USE_STATIC_LIBS=ON
          elif [ "${{ matrix.os }}" == "windows-2022" ]; then
            cmake -S . -B build \
                  -G Ninja \
                  -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE \
                  -DCMAKE_TOOLCHAIN_FILE="C:/vcpkg/scripts/buildsystems/vcpkg.cmake"
          else
            cmake -S . -B build \
                  -G Ninja \
                  -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE
          fi
          
      - name: Build
        run: cmake --build build --parallel

      # -------------------- Run Tests --------------------
      - name: Run tests
        if: success()
        run: ctest --test-dir build --output-on-failure

      # -------------------- Upload Artifacts --------------------
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: fuego-${{ matrix.os }}-${{ github.sha }}
          path: |
            build/**/fuegod*
            build/**/fuego-wallet-cli*
            build/**/walletd*
            build/**/optimizer*
          retention-days: 30
