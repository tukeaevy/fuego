# CI workflow that builds Fuego / Fuego-Wallet on all three major OSes

name: CI

on:
  push:
    branches: [ master, fix/sysapi ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-22.04, macos-14, windows-2022]

    env:
      CMAKE_BUILD_TYPE: Release

    steps:
      - uses: actions/checkout@v4

      # -------------------- Linux --------------------
      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential ninja-build pkg-config \
               libssl-dev libminiupnpc-dev libqrencode-dev libudev-dev \
               libunwind-dev liblzma-dev qtbase5-dev qtbase5-dev-tools

          # Install Boost using apt (more reliable)
          sudo apt-get install -y libboost-all-dev

      # -------------------- macOS --------------------
      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-14'
        run: |
          brew install ninja boost qt@5 miniupnpc qrencode
          echo "BOOST_ROOT=$(brew --prefix boost)" >> $GITHUB_ENV

      # -------------------- Windows --------------------
      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-2022'
        shell: pwsh
        run: |
          choco install -y ninja
          choco install -y boost-msvc-14.3 --version=1.82.0
          choco install -y miniupnpc qrencode
          choco install -y qt5-default --params '/InstallDir:C:\Qt'
          echo "BOOST_ROOT=C:\tools\boost_1_82_0" >> $env:GITHUB_ENV
          echo "Boost_INCLUDEDIR=C:\tools\boost_1_82_0\include" >> $env:GITHUB_ENV
          echo "Boost_LIBRARYDIR=C:\tools\boost_1_82_0\lib" >> $env:GITHUB_ENV

      - name: Debug Boost installation (Windows)
        if: matrix.os == 'windows-2022'
        shell: pwsh
        run: |
          echo "Checking Boost installation..."
          if (Test-Path "C:\local\") { ls C:\local\ } else { echo "C:\local\ does not exist" }
          if (Test-Path "C:\tools\") { ls C:\tools\ } else { echo "C:\tools\ does not exist" }
          if (Test-Path "C:\ProgramData\chocolatey\lib\boost-msvc-14.3\") { ls C:\ProgramData\chocolatey\lib\boost-msvc-14.3\ } else { echo "Chocolatey Boost path does not exist" }
          echo "Environment variables:"
          echo "BOOST_ROOT=$env:BOOST_ROOT"
          echo "Boost_INCLUDEDIR=$env:Boost_INCLUDEDIR"
          echo "Boost_LIBRARYDIR=$env:Boost_LIBRARYDIR"

      # -------------------- Configure & Build --------------------
      - name: Configure
        shell: bash
        run: |
          if [ "${{ matrix.os }}" == "macos-14" ]; then
            cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE \
                  -DCMAKE_OSX_ARCHITECTURES=arm64 -DBOOST_ROOT="$BOOST_ROOT"
          elif [ "${{ matrix.os }}" == "windows-2022" ]; then
            cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE \
                  -DBOOST_ROOT="$BOOST_ROOT" \
                  -DBoost_INCLUDEDIR="$Boost_INCLUDEDIR" \
                  -DBoost_LIBRARYDIR="$Boost_LIBRARYDIR"
          else
            cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE \
                  -DBOOST_ROOT="$BOOST_ROOT"
          fi

      - name: Build
        run: cmake --build build --parallel

      # -------------------- Tests (if present) --------------------
      - name: Run tests
        if: ${{ success() && hashFiles('build/tests/**') != '' }}
        run: ctest --test-dir build --output-on-failure
    
